package AnyClassLearn;

// Есть более сложный вариант создания потока. Для создания нового потока нужно реализовать интерфейс Runnable. Вы можете создать поток из любого объекта, реализующего интерфейс Runnable и объявить метод run().

class MyRunnable implements Runnable {
    // объект класса Thread
    Thread thread;

    // Конструктор
    MyRunnable() {
        // Внутри конструктора MyRunnable() мы создаём новый объект класса Thread
        thread = new Thread(this, "Runnable поток");
        System.out.println("Создан поток через Runnable " + thread);
        thread.start(); // Запускаем поток, в результате чего запускается выполнение потока, начиная с метода run(). В свою очередь метод запускает цикл для нашего потока.
        // После вызова метода start(), конструктор MyRunnable() возвращает управление приложению. Когда главный поток продолжает свою работу, он входит в свой цикл. После этого оба потока выполняются параллельно.
    }

    // Обязательный метод для интерфейса Runnable
    // Внутри метода run() вы размещаете код для нового потока. Этот поток завершится, когда метод вернёт управление.
    public void run() {
        try {
            for (int i = 5; i > 0; i--) {
                System.out.println("Runnable поток: " + i);
                Thread.sleep(500);
            }
        } catch (InterruptedException e) {
            System.out.println("Runnable поток прерван");
        }
    }
}
