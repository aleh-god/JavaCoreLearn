package AnyClassLearn;

// Синглтон (singleton) это класс, у которого экземпляр создаётся только один раз
// Для реализации синглтона нужно создать закрытый конструктор и открытый статический член, который и позволяет получить доступ к единственному экземпляру класса.
// При таком подходе мы доверяем JVM создание уникального экземпляра Singleton при загрузке класса. JVM гарантирует, что экземпляр будет создан до того, как какой-либо поток
//сможет обратиться к статической переменной uniqueInstance.
public class Singleton {

    //Экземпляр Singleton создается в статическом инициализаторе.
    //Потоковая безопасность этого кода гарантирована!
    public static final Singleton INSTANCE = new Singleton();

    // Закрытый конструктор вызывается один раз для инициализации поля INSTANCE.
    // Открытых конструктор у класса нет, поэтому после инициализации класса будет существовать только один экземпляр Single.
    private Singleton(){}

    // Экземпляр уже существует, просто возвращаем его
    public static Singleton getInstance() {
        return INSTANCE;
    }

    public void someMethod() {
        System.out.println("I am someMethod");
    }
}